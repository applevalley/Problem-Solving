# 고속도로 위에 원점으로부터 정수 거리만큼의 위치에 놓인 N개의 센서가 있다.(좌표는 정수 하나로 표현) K개의 집중국을 세울 수 있다.
# 각 집중국은 센서의 수신 가능 영역을 조절하는데, 집중국의 수신 가능 영역은 도로상에서 연결된 구간으로 나타난다.
# N개의 센서가 적어도 하나의 집중국과는 통신이 가능해야 하고, 집중국의 수신 가능 영역의 길이 합을 최소화해야 한다.
# 집중국의 수신 가능 영역 거리 합의 최솟값은? 수신 가능 영역의 길이는 0 이상이며 모든 센서의 좌표가 다를 필요는 없다.

# 센서들의 좌표를 입력받은 뒤 오름차순으로 정렬한다.
# 그 뒤 센서간의 거리를 다시 정렬한다.
# 이를 역순으로 정렬하고, k - 1번 인덱스부터 센서간의 거리 리스트의 끝까지 순회하며 합을 구한다. 합의 최솟값을 구해야 하기 때문이다.
# 센서가 1,3,6,6,7,9일 때, 사이 거리의 값은 2,3,0,1,2 이다.
# 집중국이 2개일 때, (2 - 1)번 인덱스부터 합을 구해나간다.


N = int(input())
K = int(input())
sensor = sorted(list(map(int, input().split())))
distance = sorted(list(sensor[i + 1] - sensor[i] for i in range(N - 1)), reverse=True)
cnt = 0

for i in range(K - 1, len(distance)):
    if N == K:
        cnt = 0
        break

    cnt += distance[i]

print(cnt)