# K개의 팀이 박 터트리기를 한다. N개의 공을 전부 K개의 바구니에 나눠 담아야 하는데, 바구니마다 담기는 공의 수가 다르다.
# 각 바구니에는 1개 이상의 공이 있고, 담긴 공의 개수는 전부 달라야 한다.
# 가장 많이 담긴 바구니와 적게 담긴 바구니의 차이가 최소가 되게 하자.
# N개의 공을 K개의 바구니에 담을 때, 나눠담을 수 있는지, 가능한 경우 최대 바구니-최소 바구니의 공 개수 차이는 몇개인가?

# 우선 N개의 공을 전부 쓰고, 모든 바구니에는 공이 최소 한 개는 있어야 하기에, N이 (K * (K + 1)) // 2)보다 작다면 -1을 출력한다.
# 그리디의 탈을 쓴 수학 문제같았다..
# 어떻게 해야 최적해가 나올지 고민하다가 테스트 케이스들을 이어붙여가면서 규칙성을 찾았다.

N, K = map(int, input().split())
cnt = 0

if N < (K * (K + 1) // 2):
    cnt = -1
else:
    if K % 2:
        if N % K:
            cnt = K
        else:
            cnt = K - 1
    else:
        if N % K == (K // 2):
            cnt = K - 1
        else:
            cnt = K

print(cnt)
