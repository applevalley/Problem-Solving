'''
1번부터 n번까지 n명이 참가하는 토너먼트
인접한 참가자끼리 경기를 가지고, 인원이 홀수인 경우 마지막 참가자는 부전승
전체 인원 수 N과 a, b가 주어졌을 때 a와 b는 몇 라운드에서 만나는가? 만나지 않는다면 -1

왜 당연하게 a <= b라고 생각한걸까...?
그리고 -1은 있을 수 없다...! a와 b는 서로 다르기 때문이다.
'''

N, first, second = map(int, input().split())
round_count = 1

while N > 1:
    # a와 b가 만난 경우
    # a와 b의 차가 1이면서, a와 b 각각의 2와의 몫의 차가 1이라면 둘은 인접한 것으로 볼 수 있다.
    if abs(second - first) == 1 and abs((second // 2) - (first // 2)) == 1:
        print(round_count)
        break
    # 만나지 못한 경우
    # 전체 인원 수 N은 절반으로 줄어든다. (홀수인 경우 절반 + 1)
    # 한 라운드에서는 매번 N // 2번만큼의 대결이 이루어진다.
    # 다음 라운드의 승자는 현재 번호의 절반이 되고, 만약 홀수라면 거기에 1을 더해줘야 한다.
    # 왜 더해줄까?
    # 홀수 7로 생각해보면...
    # 해당 라운드에서, 7번과 8번은 4번째 경기에서 만나게 된다.
    # 따라서, 7번은 다음 라운드에서 4번을 받게 된다. (4번째 경기에서 승리한 것이기 때문에)
    # 그렇기에 다음 라운드에 진출할 때는 n이라는 새로운 번호를 받게 되는 것!(n = 현재 라운드에서의 n번째 경기)
    else:
        N = (N // 2) + (N % 2)
        first = (first // 2) + (first % 2)
        second = (second // 2) + (second % 2)
        round_count += 1

