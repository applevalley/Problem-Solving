# 같은 높이가 있을 수 있는 막대기를 일렬로 세워 왼쪽부터 번호 붙임
# 일렬로 세운 막대기를 옆에서 보면 안보이는게 있을 수 있다
# 왜냐하면 가장 먼저 보이는 막대기보다 낮은거는 가려져서 안보일테니까
# N개 정보가 주어지면 몇개나 보일까?

# 생각해보자
# 같은 높이의 막대기를 보이는 것에 넣을 수 있나?
# 문제에서는 오른쪽에서 본다라는 조건을 준다. 가장 마지막 막대기가 기준이 될 것이다.
# 만약 첫 막대기와 높이가 같다면, 같은 선상에 있는 것으로 보일 것이다.
# 이걸 "보인다"라고 할 수 있을까? 제외해야 할 것이다.

# 시간 제한은 1초
# 막대기의 개수는 최대 10만개
# 그렇다면 O(N)정도의 복잡도면 충분하지 않을까?
# 전체를 조회해보자.

import sys

stick = list()   # 빈 배열을 만들어주자
N = int(sys.stdin.readline())    # input으로는 시간초과가 났다! 평소에 sys로 입력을 받게 작성해야 하는지 고민이 된다.

for i in range(N):
    stick.append(int(sys.stdin.readline()))    # 스택에 요소가 하나씩 들어차게 된다.

standard = stick[-1]
stick_count = 1      # 기준이 될 가장 오른쪽의 막대기는 이미 개수에 포함되어야 한다.

# 거꾸로 조회할 것이기에 len(stick)을 주면 인덱스 에러가 난다. 하나를 뺀다.
# 그리고 이미 가장 마지막 막대기를 기준으로 잡아놓았기에 실질적인 첫 조회 대상은 끝에서 2번째이다. 다시 -1
for i in range((len(stick) - 2), -1, -1):
    if stick[i] > standard:
        stick_count += 1
        standard = stick[i]

print(stick_count)